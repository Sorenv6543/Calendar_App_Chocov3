{
  "version": 3,
  "sources": ["../../node_modules/vuetify/src/components/VSelect/VSelect.tsx", "../../node_modules/vuetify/src/components/VChip/VChip.tsx", "../../node_modules/vuetify/src/components/VChipGroup/VChipGroup.tsx", "../../node_modules/vuetify/src/components/VSlideGroup/VSlideGroup.tsx", "../../node_modules/vuetify/src/components/VSlideGroup/helpers.ts", "../../node_modules/vuetify/src/components/VVirtualScroll/VVirtualScroll.tsx", "../../node_modules/vuetify/src/components/VVirtualScroll/VVirtualScrollItem.tsx", "../../node_modules/vuetify/src/composables/virtual.ts", "../../node_modules/vuetify/src/components/VSelect/useScrolling.ts"],
  "sourcesContent": ["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => (props.valueComparator || deepEqual)(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (!checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n", "/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, toDisplayString } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: IconValue,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    const variantProps = computed(() => {\n      const showColor = !group || group.isSelected.value\n      return ({\n        color: showColor ? props.color ?? props.baseColor : props.baseColor,\n        variant: props.variant,\n      })\n    })\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n              [`${props.activeClass}`]: props.activeClass && link.isActive?.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n          { ...link.linkProps }\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\" data-no-activator=\"\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? toDisplayString(props.text)}\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              data-testid=\"close-chip\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n", "// Styles\nimport './VChipGroup.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const makeVChipGroupProps = propsFactory({\n  baseColor: String,\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeVSlideGroupProps(),\n  ...makeComponentProps(),\n  ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChipGroup')\n\ntype VChipGroupSlots = {\n  default: {\n    isSelected: (id: string) => boolean\n    select: (id: string, value: boolean) => void\n    next: () => void\n    prev: () => void\n    selected: readonly string[]\n  }\n}\n\nexport const VChipGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VChipGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VChipGroup',\n\n  props: makeVChipGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        baseColor: toRef(props, 'baseColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          class={[\n            'v-chip-group',\n            {\n              'v-chip-group--column': props.column,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            select,\n            next,\n            prev,\n            selected: selected.value,\n          })}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n", "// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { useGoTo } from '@/composables/goto'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport {\n  calculateCenteredTarget,\n  calculateUpdatedTarget,\n  getClientSize,\n  getOffsetSize,\n  getScrollPosition,\n  getScrollSize,\n} from './helpers'\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GoToOptions } from '@/composables/goto'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeDisplayProps({ mobile: null }),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSlideGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { displayClasses, mobile } = useDisplay(props)\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const goTo = useGoTo()\n    const goToOptions = computed<Partial<GoToOptions>>(() => {\n      return {\n        container: containerRef.el,\n        duration: 200,\n        easing: 'easeOutQuart',\n      }\n    })\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.el) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.el.children[lastSelectedIndex.value] as HTMLElement\n\n            scrollToChildren(selectedElement, props.centerActive)\n          }\n        })\n      })\n    }\n\n    const isFocused = shallowRef(false)\n\n    function scrollToChildren (children: HTMLElement, center?: boolean) {\n      let target = 0\n\n      if (center) {\n        target = calculateCenteredTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          selectedElement: children,\n        })\n      } else {\n        target = calculateUpdatedTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          isRtl: isRtl.value,\n          selectedElement: children,\n        })\n      }\n\n      scrollToPosition(target)\n    }\n\n    function scrollToPosition (newPosition: number) {\n      if (!IN_BROWSER || !containerRef.el) return\n\n      const offsetSize = getOffsetSize(isHorizontal.value, containerRef.el)\n      const scrollPosition = getScrollPosition(isHorizontal.value, isRtl.value, containerRef.el)\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n\n      if (\n        scrollSize <= offsetSize ||\n        // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n        Math.abs(newPosition - scrollPosition) < 16\n      ) return\n\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition = (scrollWidth - containerWidth) - newPosition\n      }\n\n      if (isHorizontal.value) {\n        goTo.horizontal(newPosition, goToOptions.value)\n      } else {\n        goTo(newPosition, goToOptions.value)\n      }\n    }\n\n    function onScroll (e: Event) {\n      const { scrollTop, scrollLeft } = e.target as HTMLElement\n\n      scrollOffset.value = isHorizontal.value ? scrollLeft : scrollTop\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.el) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.el.children) {\n          if (item === el) {\n            scrollToChildren(item as HTMLElement)\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    // Affix clicks produce onFocus that we have to ignore to avoid extra scrollToChildren\n    let ignoreFocusEvent = false\n    function onFocus (e: FocusEvent) {\n      if (\n        !ignoreFocusEvent &&\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.el?.contains(e.relatedTarget as Node))\n      ) focus()\n\n      ignoreFocusEvent = false\n    }\n\n    function onFocusAffixes () {\n      ignoreFocusEvent = true\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.el) return\n\n      function toFocus (location: Parameters<typeof focus>[0]) {\n        e.preventDefault()\n        focus(location)\n      }\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          toFocus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          toFocus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          toFocus('next')\n        } else if (e.key === 'ArrowUp') {\n          toFocus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        toFocus('first')\n      } else if (e.key === 'End') {\n        toFocus('last')\n      }\n    }\n\n    function getSiblingElement (el: HTMLElement | null, location: 'next' | 'prev') {\n      if (!el) return undefined\n      let sibling: HTMLElement | null = el\n      do {\n        sibling = sibling?.[location === 'next' ? 'nextElementSibling' : 'previousElementSibling'] as HTMLElement | null\n      } while (sibling?.hasAttribute('disabled'))\n      return sibling\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.el) return\n\n      let el: HTMLElement | null | undefined\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.el)\n        el = focusable[0]\n      } else if (location === 'next') {\n        el = getSiblingElement(contentRef.el.querySelector(':focus'), location)\n\n        if (!el) return focus('first')\n      } else if (location === 'prev') {\n        el = getSiblingElement(contentRef.el.querySelector(':focus'), location)\n\n        if (!el) return focus('last')\n      } else if (location === 'first') {\n        el = (contentRef.el.firstElementChild as HTMLElement)\n\n        if (el?.hasAttribute('disabled')) el = getSiblingElement(el, 'next')\n      } else if (location === 'last') {\n        el = (contentRef.el.lastElementChild as HTMLElement)\n\n        if (el?.hasAttribute('disabled')) el = getSiblingElement(el, 'prev')\n      }\n\n      if (el) {\n        el.focus({ preventScroll: true })\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const direction = isHorizontal.value && isRtl.value ? -1 : 1\n\n      const offsetStep = (location === 'prev' ? -direction : direction) * containerSize.value\n\n      let newPosition = scrollOffset.value + offsetStep\n\n      // TODO: improve it\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition += scrollWidth - containerWidth\n      }\n\n      scrollToPosition(newPosition)\n    }\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      // 1 pixel in reserve, may be lost after rounding\n      return Math.abs(scrollOffset.value) > 1\n    })\n\n    const hasNext = computed(() => {\n      if (!containerRef.value) return false\n\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n      const clientSize = getClientSize(isHorizontal.value, containerRef.el)\n\n      const scrollSizeMax = scrollSize - clientSize\n\n      // 1 pixel in reserve, may be lost after rounding\n      return scrollSizeMax - Math.abs(scrollOffset.value) > 1\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          displayClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasPrev.value && scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasNext.value && scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n      hasPrev,\n      hasNext,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n", "export function calculateUpdatedTarget ({\n  selectedElement,\n  containerElement,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const containerSize = getOffsetSize(isHorizontal, containerElement)\n  const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement)\n\n  const childrenSize = getOffsetSize(isHorizontal, selectedElement)\n  const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement)\n\n  const additionalOffset = childrenSize * 0.4\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset\n  }\n\n  return scrollPosition\n}\n\nexport function calculateCenteredTarget ({\n  selectedElement,\n  containerElement,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isHorizontal: boolean\n}): number {\n  const containerOffsetSize = getOffsetSize(isHorizontal, containerElement)\n  const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement)\n  const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement)\n\n  return childrenOffsetPosition - (containerOffsetSize / 2) + (childrenOffsetSize / 2)\n}\n\nexport function getScrollSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'scrollWidth' : 'scrollHeight'\n  return element?.[key] || 0\n}\n\nexport function getClientSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'clientWidth' : 'clientHeight'\n  return element?.[key] || 0\n}\n\nexport function getScrollPosition (isHorizontal: boolean, rtl: boolean, element?: HTMLElement) {\n  if (!element) {\n    return 0\n  }\n\n  const {\n    scrollLeft,\n    offsetWidth,\n    scrollWidth,\n  } = element\n\n  if (isHorizontal) {\n    return rtl\n      ? scrollWidth - offsetWidth + scrollLeft\n      : scrollLeft\n  }\n\n  return element.scrollTop\n}\n\nexport function getOffsetSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetWidth' : 'offsetHeight'\n  return element?.[key] || 0\n}\n\nexport function getOffsetPosition (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetLeft' : 'offsetTop'\n  return element?.[key] || 0\n}\n", "// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      calculateVisibleItems,\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.key }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n", "// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, getPropertyFromItem, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { SelectItemKey } from '@/util'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight: number | string | null | undefined\n  itemKey: SelectItemKey\n  height: number | string | undefined\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  itemKey: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  let scrollTimeout = -1\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    window.clearTimeout(scrollTimeout)\n    scrollTimeout = window.setTimeout(handleScrollend, 500)\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    window.clearTimeout(scrollTimeout)\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => {\n      const _index = index + first.value\n      return {\n        raw: item,\n        index: _index,\n        key: getPropertyFromItem(item, props.itemKey, _index),\n      }\n    })\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: 1 })\n\n  return {\n    calculateVisibleItems,\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n", "// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n"],
  "mappings": "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",
  "names": ["calculateUpdatedTarget", "_ref", "selectedElement", "containerElement", "isRtl", "isHorizontal", "containerSize", "getOffsetSize", "scrollPosition", "getScrollPosition", "childrenSize", "childrenStartPosition", "getOffsetPosition", "additionalOffset", "calculateCenteredTarget", "_ref2", "containerOffsetSize", "childrenOffsetPosition", "childrenOffsetSize", "getScrollSize", "element", "key", "getClientSize", "rtl", "scrollLeft", "offsetWidth", "scrollWidth", "scrollTop", "VSlideGroupSymbol", "Symbol", "for", "makeVSlideGroupProps", "propsFactory", "centerActive", "Boolean", "direction", "type", "String", "default", "symbol", "nextIcon", "IconValue", "prevIcon", "showArrows", "validator", "v", "includes", "makeComponentProps", "makeDisplayProps", "mobile", "makeTagProps", "makeGroupProps", "selectedClass", "VSlideGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isRtl", "useRtl", "displayClasses", "useDisplay", "group", "useGroup", "isOverflowing", "shallowRef", "scrollOffset", "containerSize", "contentSize", "isHorizontal", "computed", "resizeRef", "containerRef", "contentRect", "containerRect", "useResizeObserver", "contentRef", "goTo", "useGoTo", "goToOptions", "container", "el", "duration", "easing", "firstSelectedIndex", "selected", "length", "items", "findIndex", "item", "id", "lastSelectedIndex", "IN_BROWSER", "frame", "watch", "cancelAnimationFrame", "requestAnimationFrame", "sizeProperty", "selectedElement", "children", "scrollToChildren", "isFocused", "center", "target", "calculateCenteredTarget", "containerElement", "calculateUpdatedTarget", "scrollToPosition", "newPosition", "offsetSize", "getOffsetSize", "scrollPosition", "getScrollPosition", "scrollSize", "getScrollSize", "Math", "abs", "scrollWidth", "offsetWidth", "containerWidth", "horizontal", "onScroll", "e", "scrollTop", "scrollLeft", "onFocusin", "composedPath", "onFocusout", "ignoreFocusEvent", "onFocus", "relatedTarget", "contains", "focus", "onFocusAffixes", "onKeydown", "toFocus", "location", "preventDefault", "key", "getSiblingElement", "undefined", "sibling", "hasAttribute", "focusable", "focusableChildren", "querySelector", "firstElementChild", "lastElementChild", "preventScroll", "scrollTo", "offsetStep", "slotProps", "next", "prev", "select", "isSelected", "hasAffixes", "hasPrev", "hasNext", "clientSize", "getClientSize", "scrollSizeMax", "useRender", "_createVNode", "tag", "class", "style", "onClick", "VFadeTransition", "VIcon", "VChipGroupSymbol", "Symbol", "for", "makeVChipGroupProps", "propsFactory", "baseColor", "String", "column", "Boolean", "filter", "valueComparator", "type", "Function", "default", "deepEqual", "makeVSlideGroupProps", "makeComponentProps", "makeGroupProps", "selectedClass", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VChipGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "themeClasses", "provideTheme", "isSelected", "select", "next", "prev", "selected", "useGroup", "provideDefaults", "VChip", "toRef", "color", "disabled", "useRender", "slideGroupProps", "VSlideGroup", "filterProps", "_createVNode", "_mergeProps", "class", "style", "makeVChipProps", "propsFactory", "activeClass", "String", "appendAvatar", "appendIcon", "IconValue", "baseColor", "closable", "Boolean", "closeIcon", "type", "default", "closeLabel", "draggable", "filter", "filterIcon", "label", "link", "undefined", "pill", "prependAvatar", "prependIcon", "ripple", "Object", "text", "Number", "modelValue", "onClick", "EventProp", "onClickOnce", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeElevationProps", "makeGroupItemProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "VChip", "genericComponent", "name", "directives", "Ripple", "props", "emits", "e", "value", "val", "click", "setup", "_ref", "attrs", "emit", "slots", "t", "useLocale", "borderClasses", "useBorder", "densityClasses", "useDensity", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "sizeClasses", "useSize", "themeClasses", "provideTheme", "isActive", "useProxiedModel", "group", "useGroupItem", "VChipGroupSymbol", "useLink", "isLink", "computed", "isClickable", "disabled", "closeProps", "preventDefault", "stopPropagation", "variantProps", "showColor", "isSelected", "color", "colorClasses", "colorStyles", "variantClasses", "useVariant", "navigate", "toggle", "onKeyDown", "key", "Tag", "hasAppendMedia", "hasAppend", "append", "hasClose", "close", "hasFilter", "hasPrependMedia", "hasPrepend", "prepend", "_withDirectives", "_createVNode", "_mergeProps", "selectedClass", "class", "style", "linkProps", "genOverlays", "VExpandXTransition", "VIcon", "VDefaultsProvider", "icon", "_vShow", "_Fragment", "VAvatar", "image", "start", "select", "toDisplayString", "end", "size", "_resolveDirective", "makeVVirtualScrollItemProps", "propsFactory", "renderless", "Boolean", "makeComponentProps", "VVirtualScrollItem", "genericComponent", "name", "inheritAttrs", "props", "emits", "height", "setup", "_ref", "attrs", "emit", "slots", "resizeRef", "contentRect", "useResizeObserver", "undefined", "watch", "value", "useRender", "_createVNode", "_Fragment", "default", "itemRef", "_mergeProps", "class", "style", "UP", "DOWN", "BUFFER_PX", "makeVirtualProps", "propsFactory", "itemHeight", "type", "Number", "String", "default", "itemKey", "Array", "Function", "height", "useVirtual", "props", "items", "display", "useDisplay", "shallowRef", "watchEffect", "value", "parseFloat", "first", "last", "Math", "ceil", "parseInt", "paddingTop", "paddingBottom", "containerRef", "ref", "markerRef", "markerOffset", "resizeRef", "contentRect", "useResizeObserver", "viewportHeight", "computed", "document", "documentElement", "hasInitialRender", "sizes", "from", "length", "offsets", "updateTime", "targetScrollIndex", "getSize", "index", "updateOffsets", "debounce", "start", "performance", "now", "i", "max", "unwatch", "watch", "v", "offsetTop", "immediate", "calculateVisibleItems", "nextTick", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "onScopeDispose", "clear", "handleItemResize", "prevHeight", "prevMinHeight", "min", "calculateOffset", "clamp", "calculateIndex", "scrollTop", "binaryClosest", "lastScrollTop", "scrollVelocity", "lastScrollTime", "val", "oldVal", "scrollTimeout", "handleScroll", "scrollTime", "scrollDeltaT", "sign", "clearTimeout", "setTimeout", "handleScrollend", "raf", "cancelAnimationFrame", "_calculateVisibleItems", "direction", "startPx", "endPx", "end", "topOverflow", "bottomOverflow", "bufferOverflow", "offset", "computedItems", "slice", "map", "item", "_index", "raw", "key", "getPropertyFromItem", "deep", "arr", "high", "low", "mid", "target", "makeVVirtualScrollProps", "propsFactory", "items", "type", "Array", "default", "renderless", "Boolean", "makeVirtualProps", "makeComponentProps", "makeDimensionProps", "VVirtualScroll", "genericComponent", "name", "props", "setup", "_ref", "slots", "vm", "getCurrentInstance", "dimensionStyles", "useDimension", "calculateVisibleItems", "containerRef", "markerRef", "handleScroll", "handleScrollend", "handleItemResize", "scrollToIndex", "paddingTop", "paddingBottom", "computedItems", "useVirtual", "toRef", "useToggleScope", "handleListeners", "add", "arguments", "length", "undefined", "method", "value", "document", "documentElement", "passive", "onMounted", "getScrollParent", "vnode", "el", "onScopeDispose", "useRender", "children", "map", "item", "_createVNode", "VVirtualScrollItem", "key", "height", "index", "slotProps", "raw", "_Fragment", "convertToUnit", "class", "style", "useScrolling", "listRef", "textFieldRef", "isScrolling", "shallowRef", "scrollTimeout", "onListScroll", "e", "cancelAnimationFrame", "value", "requestAnimationFrame", "finishScrolling", "Promise", "resolve", "stop", "watch", "onListKeydown", "key", "focus", "includes", "el", "$el", "scrollTo", "top", "scrollHeight", "behavior", "children", "querySelectorAll", "getBoundingClientRect", "child", "bottom", "reverse", "onScrollPassive", "onKeydown", "makeSelectProps", "propsFactory", "chips", "Boolean", "closableChips", "closeText", "type", "String", "default", "openText", "eager", "hideNoData", "hideSelected", "listProps", "Object", "menu", "menuIcon", "IconValue", "menuProps", "multiple", "noDataText", "openOnClear", "itemColor", "makeItemsProps", "itemChildren", "makeVSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "component", "VDialogTransition", "VSelect", "genericComponent", "name", "props", "emits", "focused", "value", "ue", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "vMenuRef", "vVirtualScrollRef", "items", "transformIn", "transformOut", "useItems", "model", "useProxiedModel", "v", "wrapInArray", "transformed", "counterValue", "computed", "length", "form", "useForm", "selectedValues", "map", "selection", "isFocused", "shallowRef", "keyboardLookupPrefix", "keyboardLookupLastTime", "displayItems", "filter", "item", "some", "s", "valueComparator", "deepEqual", "menuDisabled", "isReadonly", "isDisabled", "_menu", "get", "set", "Î¨openChildren", "size", "label", "computedMenuProps", "activatorProps", "listRef", "listEvents", "useScrolling", "onClear", "e", "onMousedownControl", "onListKeydown", "checkPrintable", "onKeydown", "key", "includes", "preventDefault", "focus", "KEYBOARD_LOOKUP_THRESHOLD", "now", "performance", "toLowerCase", "find", "title", "startsWith", "undefined", "index", "indexOf", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "select", "arguments", "disabled", "findIndex", "add", "splice", "nextTick", "onBlur", "$el", "contains", "relatedTarget", "onAfterEnter", "calculateVisibleItems", "onAfterLeave", "onFocusin", "onModelUpdate", "matchesSelector", "watch", "newVal", "oldVal", "useRender", "hasChips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "placeholder", "persistentPlaceholder", "_createVNode", "_mergeProps", "join", "$event", "externalValue", "class", "style", "_Fragment", "VMenu", "VList", "color", "VListItem", "VVirtualScroll", "_ref2", "itemRef", "itemProps", "mergeProps", "onClick", "prepend", "_ref3", "isSelected", "VCheckboxBtn", "prependAvatar", "VAvatar", "prependIcon", "VIcon", "onChipClose", "stopPropagation", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "VDefaultsProvider", "closable", "text", "_createTextVNode", "_len", "args", "Array", "_key", "fieldIconColor", "forwardRefs"]
}
